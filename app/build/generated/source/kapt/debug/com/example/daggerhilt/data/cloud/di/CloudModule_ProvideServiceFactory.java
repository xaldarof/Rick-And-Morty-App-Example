// Generated by Dagger (https://dagger.dev).
package com.example.daggerhilt.data.cloud.di;

import com.example.daggerhilt.data.cloud.data_source.RickAndMortyApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CloudModule_ProvideServiceFactory implements Factory<RickAndMortyApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public CloudModule_ProvideServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RickAndMortyApiService get() {
    return provideService(retrofitProvider.get());
  }

  public static CloudModule_ProvideServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new CloudModule_ProvideServiceFactory(retrofitProvider);
  }

  public static RickAndMortyApiService provideService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(CloudModule.INSTANCE.provideService(retrofit));
  }
}
