// Generated by Dagger (https://dagger.dev).
package com.example.daggerhilt.data.cache.di;

import android.content.Context;
import com.example.daggerhilt.data.cache.core.AppDataBase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CacheDataModule_ProvideDatabaseFactory implements Factory<AppDataBase> {
  private final Provider<Context> contextProvider;

  public CacheDataModule_ProvideDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public AppDataBase get() {
    return provideDatabase(contextProvider.get());
  }

  public static CacheDataModule_ProvideDatabaseFactory create(Provider<Context> contextProvider) {
    return new CacheDataModule_ProvideDatabaseFactory(contextProvider);
  }

  public static AppDataBase provideDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(CacheDataModule.INSTANCE.provideDatabase(context));
  }
}
