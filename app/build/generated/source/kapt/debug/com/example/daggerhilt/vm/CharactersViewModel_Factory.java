// Generated by Dagger (https://dagger.dev).
package com.example.daggerhilt.vm;

import com.example.daggerhilt.data.cache.data_source.RickAndMortyRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharactersViewModel_Factory implements Factory<CharactersViewModel> {
  private final Provider<RickAndMortyRepository> rickAndMortyRepositoryProvider;

  public CharactersViewModel_Factory(
      Provider<RickAndMortyRepository> rickAndMortyRepositoryProvider) {
    this.rickAndMortyRepositoryProvider = rickAndMortyRepositoryProvider;
  }

  @Override
  public CharactersViewModel get() {
    return newInstance(rickAndMortyRepositoryProvider.get());
  }

  public static CharactersViewModel_Factory create(
      Provider<RickAndMortyRepository> rickAndMortyRepositoryProvider) {
    return new CharactersViewModel_Factory(rickAndMortyRepositoryProvider);
  }

  public static CharactersViewModel newInstance(RickAndMortyRepository rickAndMortyRepository) {
    return new CharactersViewModel(rickAndMortyRepository);
  }
}
